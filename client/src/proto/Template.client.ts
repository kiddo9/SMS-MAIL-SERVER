// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "server/proto/Template.proto" (package "Templates", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { TemplateServices } from "./Template";
import type { GetAnSmsTemplateResponse } from "./Template";
import type { GetAnSmsTemplateRequest } from "./Template";
import type { GetATemplateResponse } from "./Template";
import type { GetATemplateRequest } from "./Template";
import type { SmsTemplateEditRequest } from "./Template";
import type { TemplateEditRequest } from "./Template";
import type { TemplateFetchResponse } from "./Template";
import type { TemplateFetchRequest } from "./Template";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { SmsTemplateRequest } from "./Template";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { Response } from "./Template";
import type { TemplateRequest } from "./Template";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service Templates.TemplateServices
 */
export interface ITemplateServicesClient {
    /**
     * @generated from protobuf rpc: CreateEmailTemplate
     */
    createEmailTemplate(input: TemplateRequest, options?: RpcOptions): UnaryCall<TemplateRequest, Response>;
    /**
     * @generated from protobuf rpc: CreateSmsTemplate
     */
    createSmsTemplate(input: SmsTemplateRequest, options?: RpcOptions): UnaryCall<SmsTemplateRequest, Response>;
    /**
     * @generated from protobuf rpc: AllTemplates
     */
    allTemplates(input: TemplateFetchRequest, options?: RpcOptions): ServerStreamingCall<TemplateFetchRequest, TemplateFetchResponse>;
    /**
     * @generated from protobuf rpc: EditEmailTemplate
     */
    editEmailTemplate(input: TemplateEditRequest, options?: RpcOptions): UnaryCall<TemplateEditRequest, Response>;
    /**
     * @generated from protobuf rpc: EditSmsTemplate
     */
    editSmsTemplate(input: SmsTemplateEditRequest, options?: RpcOptions): UnaryCall<SmsTemplateEditRequest, Response>;
    /**
     * @generated from protobuf rpc: GetEmailTemplateById
     */
    getEmailTemplateById(input: GetATemplateRequest, options?: RpcOptions): UnaryCall<GetATemplateRequest, GetATemplateResponse>;
    /**
     * @generated from protobuf rpc: GetSmsTemplateById
     */
    getSmsTemplateById(input: GetAnSmsTemplateRequest, options?: RpcOptions): UnaryCall<GetAnSmsTemplateRequest, GetAnSmsTemplateResponse>;
}
/**
 * @generated from protobuf service Templates.TemplateServices
 */
export class TemplateServicesClient implements ITemplateServicesClient, ServiceInfo {
    typeName = TemplateServices.typeName;
    methods = TemplateServices.methods;
    options = TemplateServices.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateEmailTemplate
     */
    createEmailTemplate(input: TemplateRequest, options?: RpcOptions): UnaryCall<TemplateRequest, Response> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<TemplateRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: CreateSmsTemplate
     */
    createSmsTemplate(input: SmsTemplateRequest, options?: RpcOptions): UnaryCall<SmsTemplateRequest, Response> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<SmsTemplateRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: AllTemplates
     */
    allTemplates(input: TemplateFetchRequest, options?: RpcOptions): ServerStreamingCall<TemplateFetchRequest, TemplateFetchResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<TemplateFetchRequest, TemplateFetchResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: EditEmailTemplate
     */
    editEmailTemplate(input: TemplateEditRequest, options?: RpcOptions): UnaryCall<TemplateEditRequest, Response> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<TemplateEditRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: EditSmsTemplate
     */
    editSmsTemplate(input: SmsTemplateEditRequest, options?: RpcOptions): UnaryCall<SmsTemplateEditRequest, Response> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<SmsTemplateEditRequest, Response>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetEmailTemplateById
     */
    getEmailTemplateById(input: GetATemplateRequest, options?: RpcOptions): UnaryCall<GetATemplateRequest, GetATemplateResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetATemplateRequest, GetATemplateResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetSmsTemplateById
     */
    getSmsTemplateById(input: GetAnSmsTemplateRequest, options?: RpcOptions): UnaryCall<GetAnSmsTemplateRequest, GetAnSmsTemplateResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAnSmsTemplateRequest, GetAnSmsTemplateResponse>("unary", this._transport, method, opt, input);
    }
}
