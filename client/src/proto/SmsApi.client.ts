// @generated by protobuf-ts 2.11.1
// @generated from protobuf file "server/proto/SmsApi.proto" (package "admin", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { SmsServices } from "./SmsApi";
import type { BulkSmsResponse } from "./SmsApi";
import type { BulkSms } from "./SmsApi";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { EbulkSmsResponse } from "./SmsApi";
import type { EbulkSms } from "./SmsApi";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service admin.SmsServices
 */
export interface ISmsServicesClient {
    /**
     * @generated from protobuf rpc: EbulkSmsWallet
     */
    ebulkSmsWallet(input: EbulkSms, options?: RpcOptions): ServerStreamingCall<EbulkSms, EbulkSmsResponse>;
    /**
     * @generated from protobuf rpc: BulkSmsWallet
     */
    bulkSmsWallet(input: BulkSms, options?: RpcOptions): ServerStreamingCall<BulkSms, BulkSmsResponse>;
}
/**
 * @generated from protobuf service admin.SmsServices
 */
export class SmsServicesClient implements ISmsServicesClient, ServiceInfo {
    typeName = SmsServices.typeName;
    methods = SmsServices.methods;
    options = SmsServices.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: EbulkSmsWallet
     */
    ebulkSmsWallet(input: EbulkSms, options?: RpcOptions): ServerStreamingCall<EbulkSms, EbulkSmsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<EbulkSms, EbulkSmsResponse>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: BulkSmsWallet
     */
    bulkSmsWallet(input: BulkSms, options?: RpcOptions): ServerStreamingCall<BulkSms, BulkSmsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<BulkSms, BulkSmsResponse>("serverStreaming", this._transport, method, opt, input);
    }
}
