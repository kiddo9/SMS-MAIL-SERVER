/**
 * @fileoverview gRPC-Web generated client stub for admin
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.31.1
// source: server/proto/Admin.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as server_proto_Admin_pb from '../../server/proto/Admin_pb'; // proto import: "server/proto/Admin.proto"


export class AdminServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/CreateAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.CreateAdminUserRequest,
    server_proto_Admin_pb.CreateAdminUserResponse,
    (request: server_proto_Admin_pb.CreateAdminUserRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.CreateAdminUserResponse.deserializeBinary
  );

  createAdmin(
    request: server_proto_Admin_pb.CreateAdminUserRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.CreateAdminUserResponse>;

  createAdmin(
    request: server_proto_Admin_pb.CreateAdminUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.CreateAdminUserResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.CreateAdminUserResponse>;

  createAdmin(
    request: server_proto_Admin_pb.CreateAdminUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.CreateAdminUserResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/CreateAdmin',
        request,
        metadata || {},
        this.methodDescriptorCreateAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/CreateAdmin',
    request,
    metadata || {},
    this.methodDescriptorCreateAdmin);
  }

  methodDescriptorGetAllAdmins = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/GetAllAdmins',
    grpcWeb.MethodType.SERVER_STREAMING,
    server_proto_Admin_pb.AllAdmins,
    server_proto_Admin_pb.Admin,
    (request: server_proto_Admin_pb.AllAdmins) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.Admin.deserializeBinary
  );

  getAllAdmins(
    request: server_proto_Admin_pb.AllAdmins,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<server_proto_Admin_pb.Admin> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/admin.AdminService/GetAllAdmins',
      request,
      metadata || {},
      this.methodDescriptorGetAllAdmins);
  }

  methodDescriptorValidateAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/ValidateAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.GetAndValidateAdminRequest,
    server_proto_Admin_pb.ValidateAdminResponse,
    (request: server_proto_Admin_pb.GetAndValidateAdminRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.ValidateAdminResponse.deserializeBinary
  );

  validateAdmin(
    request: server_proto_Admin_pb.GetAndValidateAdminRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.ValidateAdminResponse>;

  validateAdmin(
    request: server_proto_Admin_pb.GetAndValidateAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.ValidateAdminResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.ValidateAdminResponse>;

  validateAdmin(
    request: server_proto_Admin_pb.GetAndValidateAdminRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.ValidateAdminResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/ValidateAdmin',
        request,
        metadata || {},
        this.methodDescriptorValidateAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/ValidateAdmin',
    request,
    metadata || {},
    this.methodDescriptorValidateAdmin);
  }

  methodDescriptorSendOtp = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/SendOtp',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.OtpRequest,
    server_proto_Admin_pb.OtpResponse,
    (request: server_proto_Admin_pb.OtpRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.OtpResponse.deserializeBinary
  );

  sendOtp(
    request: server_proto_Admin_pb.OtpRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.OtpResponse>;

  sendOtp(
    request: server_proto_Admin_pb.OtpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.OtpResponse>;

  sendOtp(
    request: server_proto_Admin_pb.OtpRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/SendOtp',
        request,
        metadata || {},
        this.methodDescriptorSendOtp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/SendOtp',
    request,
    metadata || {},
    this.methodDescriptorSendOtp);
  }

  methodDescriptorVerifyOtp = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/VerifyOtp',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.OtpVerificationRequest,
    server_proto_Admin_pb.OtpVerificationResponse,
    (request: server_proto_Admin_pb.OtpVerificationRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.OtpVerificationResponse.deserializeBinary
  );

  verifyOtp(
    request: server_proto_Admin_pb.OtpVerificationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.OtpVerificationResponse>;

  verifyOtp(
    request: server_proto_Admin_pb.OtpVerificationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpVerificationResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.OtpVerificationResponse>;

  verifyOtp(
    request: server_proto_Admin_pb.OtpVerificationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpVerificationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/VerifyOtp',
        request,
        metadata || {},
        this.methodDescriptorVerifyOtp,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/VerifyOtp',
    request,
    metadata || {},
    this.methodDescriptorVerifyOtp);
  }

  methodDescriptorLoginAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/LoginAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.OtpRequest,
    server_proto_Admin_pb.OtpResponse,
    (request: server_proto_Admin_pb.OtpRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.OtpResponse.deserializeBinary
  );

  loginAdmin(
    request: server_proto_Admin_pb.OtpRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.OtpResponse>;

  loginAdmin(
    request: server_proto_Admin_pb.OtpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.OtpResponse>;

  loginAdmin(
    request: server_proto_Admin_pb.OtpRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.OtpResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/LoginAdmin',
        request,
        metadata || {},
        this.methodDescriptorLoginAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/LoginAdmin',
    request,
    metadata || {},
    this.methodDescriptorLoginAdmin);
  }

  methodDescriptorGetSpecificAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/GetSpecificAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.GetASpecificAdminRequest,
    server_proto_Admin_pb.GetASpecificAdminResponse,
    (request: server_proto_Admin_pb.GetASpecificAdminRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.GetASpecificAdminResponse.deserializeBinary
  );

  getSpecificAdmin(
    request: server_proto_Admin_pb.GetASpecificAdminRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.GetASpecificAdminResponse>;

  getSpecificAdmin(
    request: server_proto_Admin_pb.GetASpecificAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.GetASpecificAdminResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.GetASpecificAdminResponse>;

  getSpecificAdmin(
    request: server_proto_Admin_pb.GetASpecificAdminRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.GetASpecificAdminResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/GetSpecificAdmin',
        request,
        metadata || {},
        this.methodDescriptorGetSpecificAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/GetSpecificAdmin',
    request,
    metadata || {},
    this.methodDescriptorGetSpecificAdmin);
  }

  methodDescriptorUpdateAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/UpdateAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.AdminUpdateRequest,
    server_proto_Admin_pb.AdminUpdateResponse,
    (request: server_proto_Admin_pb.AdminUpdateRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.AdminUpdateResponse.deserializeBinary
  );

  updateAdmin(
    request: server_proto_Admin_pb.AdminUpdateRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.AdminUpdateResponse>;

  updateAdmin(
    request: server_proto_Admin_pb.AdminUpdateRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.AdminUpdateResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.AdminUpdateResponse>;

  updateAdmin(
    request: server_proto_Admin_pb.AdminUpdateRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.AdminUpdateResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/UpdateAdmin',
        request,
        metadata || {},
        this.methodDescriptorUpdateAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/UpdateAdmin',
    request,
    metadata || {},
    this.methodDescriptorUpdateAdmin);
  }

  methodDescriptorDeleteAdmin = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/DeleteAdmin',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.DeleteAdminRequest,
    server_proto_Admin_pb.DeleteAdminResponse,
    (request: server_proto_Admin_pb.DeleteAdminRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.DeleteAdminResponse.deserializeBinary
  );

  deleteAdmin(
    request: server_proto_Admin_pb.DeleteAdminRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.DeleteAdminResponse>;

  deleteAdmin(
    request: server_proto_Admin_pb.DeleteAdminRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.DeleteAdminResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.DeleteAdminResponse>;

  deleteAdmin(
    request: server_proto_Admin_pb.DeleteAdminRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.DeleteAdminResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/DeleteAdmin',
        request,
        metadata || {},
        this.methodDescriptorDeleteAdmin,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/DeleteAdmin',
    request,
    metadata || {},
    this.methodDescriptorDeleteAdmin);
  }

  methodDescriptorValidateToken = new grpcWeb.MethodDescriptor(
    '/admin.AdminService/ValidateToken',
    grpcWeb.MethodType.UNARY,
    server_proto_Admin_pb.TokenValidationRequest,
    server_proto_Admin_pb.TokenValidationResponse,
    (request: server_proto_Admin_pb.TokenValidationRequest) => {
      return request.serializeBinary();
    },
    server_proto_Admin_pb.TokenValidationResponse.deserializeBinary
  );

  validateToken(
    request: server_proto_Admin_pb.TokenValidationRequest,
    metadata?: grpcWeb.Metadata | null): Promise<server_proto_Admin_pb.TokenValidationResponse>;

  validateToken(
    request: server_proto_Admin_pb.TokenValidationRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.TokenValidationResponse) => void): grpcWeb.ClientReadableStream<server_proto_Admin_pb.TokenValidationResponse>;

  validateToken(
    request: server_proto_Admin_pb.TokenValidationRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: server_proto_Admin_pb.TokenValidationResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/admin.AdminService/ValidateToken',
        request,
        metadata || {},
        this.methodDescriptorValidateToken,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/admin.AdminService/ValidateToken',
    request,
    metadata || {},
    this.methodDescriptorValidateToken);
  }

}

