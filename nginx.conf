user nginx;
worker_processes auto;

events { 
    worker_connections 1024;
 };

 http { 
    server_tokens off;
    access_log /var/log/nginx/access.log;

    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    upstream client {
        server host.docker.internal:5173;
    };

    upstream Server{
        server host.docker.internal:8081;
    };

    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=1r/s;

    server { 
        listen 80;

        server_name localhost;

        location / {
           limit_req zone=mylimit burst=20 nodelay;
           add_header X-Frame-Options "DENY" always;
           add_header X-Content-Type-Options "nosniff" always;
           add_header Referrer-Policy "no-referrer" always;
           add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
           add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

           add_header Content-Security-Policy "
           default-src 'self'; 
           script-src 'self'; 
           script-src-elem 'self'; 
           style-src 'self'; 
           style-src-elem 'self'; 
           font-src 'self';
           connect-src 'self';
           frame-src ;
           object-src 'none';
           " always;

            proxy_pass http://client/;
            proxy_http_version  1.1;
            proxy_set_header Host $host;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }

        location /api/v3/ {
           limit_req zone=mylimit burst=20 nodelay;
           add_header X-Frame-Options "DENY" always;
           add_header X-Content-Type-Options "nosniff" always;
           add_header Referrer-Policy "no-referrer-when-downgrade" always;
           add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
           add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

           add_header Content-Security-Policy "
           default-src 'self'; 
           script-src 'self';  
           object-src 'none';
           " always;

            proxy_pass http://Server/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
     };
  };